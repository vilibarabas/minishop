<?php

function wishlist_init() {
  $path = drupal_get_path('module', 'wishlist');

  drupal_add_css($path . '/css/top_wishlist.css');
}


function wishlist_menu() {
  $menu = array();
  
  $menu['wishlist'] = array(
    'title' => 'Wishlist',
    'page callback' => 'wishlist_list',
    'page arguments' => array('wishlist_list'),
    'access callback' => TRUE,
    'file' => 'wishlist_list.inc',

  );
  
  $menu['delete/%'] = array(
    'title' => 'Delete',
    'page callback' => 'wishlist_delete_item',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'wishlist.delete_item.inc',
    
  );
  
  $menu['wishlist/add/%'] = array(
    'title' => 'Add to wishlist',
    'page callback' => 'wishlist_add_item',
    'page arguments' => array(2),
    'access callback' => TRUE,
     'file' => 'wishlist.add_item.inc',
  );

   
  $menu['admin/config/wishlist'] = array(
    'title' => 'Wishlist',
    'description' => 'A Wishlist.',
    'position' => 'left',
    'weight' => -15,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  
  $menu['admin/config/wishlist/settings'] = array(
    'title' => 'Wishlist settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wishlist_settings_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'wishlist.admin.inc',
  );
  
  return $menu;
}


function wishlist_block_info() {
  $blocks['wishlist'] = array(
    'info' => t('Wishlit'), 
  );

  return $blocks;
}


function wishlist_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'wishlist':
      $block['subject'] = '';
      $block['content'] = wishlist_get_top();
      break;
  }
  return $block;
}

function wishlist_get_top() {
  global $user;
  $wishlist = db_select('wishlist', 'w')
            ->fields('w')
            ->condition('uid', $user->uid)
            ->execute()
            ->fetchAll();

  return wishlist_prepar_rows_top($wishlist);
}


function wishlist_prepar_rows_top($items) {
 
  $html = '';
  $path = drupal_get_path('module', 'wishlist');
  
  $start = ((count($items)-3) > 0) ?  count($items)-3: 0;
  
  for($i = $start; $i < count($items); $i++) {
   
    $product = node_load($items[$i]->pid);
    //dpm($product->field_images['und'][0]['uri']);
    
    $html .= theme_render_template($path. '/templates/top_wishlist_item.tpl.php', array(
      'link' => '?q=node/'. $product->vid, 
      'name' => $product->title,
      'price' => $product->field_price['und'][0]['value'],
      'image' => theme('image_style',array('style_name' => 'thumbnail', 'path' => $product->field_images['und'][0]['uri']))
      )
    );
  }
  $html .= l('List all whislist >> ', 'wishlist');
  $html = theme_render_template($path. '/templates/wishlist_top_container.tpl.php', array(
                                      'title' => t('Wishlist'),
                                      'top' => $html,
                                      'count' => count($items),
                                       ));
  return $html;
}

function wishlist_field_extra_fields() {
   
  $field_name = 'my_extra_field';
  $node_type = variable_get('wishlist_settings')['bundle'];
  
  $extra['node'][$node_type]['display'][$field_name] = array(
    'label' => t('Field title'),
    'description' => t('Field description.'),
    // default weight value
    'weight' => 50, 
  );
  return $extra;
}

function wishlist_node_view($node, $view_mode, $langcode) {
  
    $extra_fields = field_info_extra_fields('node', $node->type, 'display');
    $field_name = 'my_extra_field';
    if (!empty($extra_fields[$field_name]['display'][$view_mode]['visible'])) {
      // Your extra field logic goes here. It can be any renderable array.
      $node->content[$field_name] = array(
        '#type' => 'item',
        '#markup' => l(t('Add to wishlist'), 'wishlist/add/'. $node->vid , array('attributes' => array('class' => array('btn btn-success')))),
      );
    }
}

